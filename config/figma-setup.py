#!/usr/bin/env python3
"""
Figma Integration Setup Script for Earth Saver Game
Creates folders, template files, and integration helpers
"""

import os
from pathlib import Path

def create_figma_structure():
    """Create folder structure for Figma assets"""
    folders = [
        "assets/images/figma",
        "assets/images/figma/backgrounds",
        "assets/images/figma/buttons", 
        "assets/images/figma/icons",
        "assets/images/figma/sprites",
        "assets/images/figma/ui-elements",
        "assets/css/figma"
    ]
    
    print("üé® Creating Figma integration structure...")
    
    for folder in folders:
        Path(folder).mkdir(parents=True, exist_ok=True)
        print(f"   ‚úÖ Created: {folder}")
    
    return folders

def create_figma_css_template():
    """Create CSS template for Figma design integration"""
    
    css_content = """/* Figma Design Integration - Homepage Styles
   Generated by Earth Saver Figma Setup Script
   
   Instructions:
   1. Export CSS from Figma (Dev Mode or plugins)
   2. Paste your Figma styles below the template
   3. Adapt colors to use our pixel art variables
   4. Maintain pixel art aesthetic (sharp edges, chunky shadows)
*/

/* Import our base pixel art framework */
@import url('../pixel-styles.css');

/* ====================================
   FIGMA DESIGN VARIABLES
   Paste your Figma CSS custom properties here
   ==================================== */

:root {
    /* Example Figma colors - replace with your design */
    --figma-primary: #0066FF;
    --figma-secondary: #00AA00;
    --figma-accent: #FFAA00;
    --figma-text: #222222;
    --figma-background: #FFFFFF;
    
    /* Adapt to our pixel variables if needed */
    --figma-border: 4px solid var(--pixel-black);
    --figma-shadow: 6px 6px 0 var(--pixel-black);
}

/* ====================================
   FIGMA LAYOUT COMPONENTS
   Paste your Figma component styles here
   ==================================== */

.figma-homepage-container {
    /* Base container - adapt from Figma */
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
    
    /* Maintain pixel art characteristics */
    font-family: var(--pixel-font-family);
    image-rendering: pixelated;
}

.figma-hero-section {
    /* Hero section from Figma */
    background: var(--figma-background);
    border: var(--figma-border);
    box-shadow: var(--figma-shadow);
    padding: 40px;
    margin-bottom: 30px;
    
    /* Example background image from Figma export */
    /* background-image: url('../images/figma/backgrounds/hero-bg.png'); */
}

.figma-card {
    /* Card component from Figma */
    background: var(--figma-background);
    border: var(--figma-border);
    box-shadow: var(--figma-shadow);
    padding: 20px;
    margin: 15px 0;
    
    /* Pixel art adaptation */
    border-radius: 0; /* No rounded corners for pixel art */
    transition: none; /* Instant state changes for retro feel */
}

.figma-card:hover {
    transform: translate(2px, 2px);
    box-shadow: 4px 4px 0 var(--pixel-black);
}

.figma-button {
    /* Button from Figma design */
    background: var(--figma-primary);
    color: white;
    border: var(--figma-border);
    box-shadow: var(--figma-shadow);
    padding: 12px 24px;
    font-family: var(--pixel-font-family);
    font-weight: bold;
    text-transform: uppercase;
    cursor: pointer;
    
    /* Pixel art button characteristics */
    border-radius: 0;
    transition: none;
    
    /* Use sprite if exported from Figma */
    /* background-image: url('../images/figma/buttons/primary-button.png'); */
}

.figma-button:hover {
    background: var(--figma-accent);
    transform: translate(2px, 2px);
    box-shadow: 4px 4px 0 var(--pixel-black);
}

/* ====================================
   FIGMA ICONS & SPRITES
   Reference your exported Figma assets
   ==================================== */

.figma-icon {
    /* Base icon styling */
    width: 32px;
    height: 32px;
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
}

.figma-icon-home {
    background-image: url('../images/figma/icons/home.png');
}

.figma-icon-game {
    background-image: url('../images/figma/icons/game.png');
}

.figma-icon-profile {
    background-image: url('../images/figma/icons/profile.png');
}

/* ====================================
   FIGMA RESPONSIVE DESIGN
   Adapt your Figma responsive rules
   ==================================== */

@media (max-width: 768px) {
    .figma-homepage-container {
        padding: 15px;
    }
    
    .figma-hero-section {
        padding: 20px;
    }
    
    .figma-card {
        margin: 10px 0;
        padding: 15px;
    }
}

@media (max-width: 480px) {
    .figma-hero-section {
        padding: 15px;
    }
    
    .figma-button {
        padding: 10px 20px;
        font-size: 14px;
    }
}

/* ====================================
   INTEGRATION HELPERS
   Utilities to blend Figma design with pixel art
   ==================================== */

.figma-pixel-blend {
    /* Apply this class to smooth Figma-to-pixel transitions */
    image-rendering: pixelated;
    border-radius: 0 !important;
    box-shadow: var(--pixel-shadow);
}

.figma-maintain-aspect {
    /* Maintain Figma proportions while adding pixel styling */
    border: var(--pixel-border);
    box-shadow: var(--pixel-shadow-sm);
}

/* ====================================
   ANIMATION ADAPTATIONS
   Convert smooth Figma animations to stepped pixel animations
   ==================================== */

@keyframes figma-pixel-bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-8px); }
}

@keyframes figma-pixel-pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.figma-animated {
    animation: figma-pixel-bounce 2s steps(4, end) infinite;
}

/* ====================================
   NOTES FOR FIGMA INTEGRATION:
   
   1. Export Process:
      - Use Figma Dev Mode or plugins to get CSS
      - Export images as PNG (2x for retina)
      - Save SVG icons to icons/ folder
   
   2. Color Adaptation:
      - Replace Figma hex colors with our pixel variables
      - Maintain high contrast for pixel art aesthetic
   
   3. Layout Preservation:
      - Keep Figma layout structure
      - Add pixel art borders and shadows
      - Remove border-radius for sharp pixel edges
   
   4. Asset References:
      - Update background-image URLs to point to figma folder
      - Use image-rendering: pixelated for all images
   
   5. Animation Conversion:
      - Convert smooth transitions to steps() animations
      - Use transform for position changes
      - Avoid opacity transitions (not retro)
   
   ==================================== */"""
    
    css_file = "assets/css/figma/homepage-design.css"
    with open(css_file, 'w', encoding='utf-8') as f:
        f.write(css_content)
    
    print(f"   ‚úÖ Created CSS template: {css_file}")
    return css_file

def create_figma_integration_guide():
    """Create integration guide and helper files"""
    
    guide_content = """# üé® Figma to Earth Saver Integration Guide

## üìã Quick Start Checklist

### 1. Export Assets from Figma
- [ ] **Images**: Export as PNG (2x) ‚Üí `assets/images/figma/`
- [ ] **Icons**: Export as SVG ‚Üí `assets/images/figma/icons/`
- [ ] **Backgrounds**: Export as PNG ‚Üí `assets/images/figma/backgrounds/`
- [ ] **UI Elements**: Export as PNG ‚Üí `assets/images/figma/ui-elements/`

### 2. Export CSS from Figma
- [ ] Use Figma Dev Mode (Inspect Panel)
- [ ] Or use plugins: Anima, Figma to CSS, etc.
- [ ] Copy CSS rules to `assets/css/figma/homepage-design.css`

### 3. Integration Steps
- [ ] Paste Figma CSS into the template file
- [ ] Replace colors with our pixel art variables
- [ ] Add pixel art borders and shadows
- [ ] Remove border-radius (keep sharp edges)
- [ ] Update image paths to figma folder

## üõ†Ô∏è File Structure Created

```
assets/
‚îú‚îÄ‚îÄ css/figma/
‚îÇ   ‚îî‚îÄ‚îÄ homepage-design.css     # üëà Your Figma CSS goes here
‚îî‚îÄ‚îÄ images/figma/
    ‚îú‚îÄ‚îÄ backgrounds/            # Background images
    ‚îú‚îÄ‚îÄ buttons/               # Button sprites
    ‚îú‚îÄ‚îÄ icons/                 # Icon assets
    ‚îú‚îÄ‚îÄ sprites/              # Game sprites
    ‚îî‚îÄ‚îÄ ui-elements/          # UI components
```

## üéØ Integration Methods

### Method 1: Replace Homepage (Full Figma Design)
```html
<!-- In src/homepage.html -->
<link rel="stylesheet" href="../assets/css/pixel-styles.css">
<link rel="stylesheet" href="../assets/css/figma/homepage-design.css">
```

### Method 2: Hybrid Approach (Recommended)
Keep pixel art framework + add Figma enhancements:
```css
.enhanced-card {
    @extend .pixel-card;
    background-image: url('../images/figma/card-bg.png');
}
```

### Method 3: A/B Testing
Create alternative homepage version:
```bash
cp src/homepage.html src/homepage-figma.html
# Edit homepage-figma.html with your design
```

## üé® Color Conversion Guide

Replace Figma colors with our pixel variables:

| Figma Color | Pixel Variable |
|-------------|----------------|
| `#0066FF` | `var(--pixel-earth-blue)` |
| `#00AA00` | `var(--pixel-earth-green)` |
| `#FF2222` | `var(--pixel-critical-red)` |
| `#FFAA00` | `var(--pixel-warning-yellow)` |
| `#FFFFFF` | `var(--pixel-white)` |
| `#000000` | `var(--pixel-black)` |

## üìê Layout Adaptation Rules

1. **Maintain Structure**: Keep Figma layout hierarchy
2. **Add Pixel Borders**: `border: 4px solid var(--pixel-black)`
3. **Chunky Shadows**: `box-shadow: 6px 6px 0 var(--pixel-black)`
4. **No Rounded Corners**: `border-radius: 0`
5. **Pixelate Images**: `image-rendering: pixelated`

## üöÄ Testing Your Integration

1. **Start Server**: `python config/server.py`
2. **Navigate**: Go to homepage after login
3. **Debug**: Check browser console for asset loading
4. **Responsive**: Test on mobile/tablet views

## üí° Pro Tips

- Export Figma assets at 2x resolution for crisp display
- Use PNG for complex graphics, SVG for simple icons
- Maintain our pixel art aesthetic while adding your design flair
- Test on different screen sizes to ensure responsive design

## üÜò Troubleshooting

**Images not loading?**
- Check file paths in CSS
- Ensure assets are in correct folders
- Verify image file extensions match CSS

**CSS not applying?**
- Check CSS file is linked in HTML
- Verify CSS syntax is valid
- Use browser dev tools to debug

**Layout broken on mobile?**
- Add responsive rules to Figma CSS
- Test with browser dev tools device emulation

---

**Ready to integrate your Figma design? Follow the checklist above and your design will blend perfectly with our pixel art game! üéÆüé®**
"""
    
    guide_file = "assets/figma-integration-guide.md"
    with open(guide_file, 'w', encoding='utf-8') as f:
        f.write(guide_content)
    
    print(f"   ‚úÖ Created integration guide: {guide_file}")
    return guide_file

def create_asset_placeholders():
    """Create placeholder files to show expected structure"""
    
    placeholders = {
        "assets/images/figma/README.md": """# Figma Assets Folder

## üìÅ Folder Structure

- `backgrounds/` - Background images from Figma
- `buttons/` - Button sprites and states  
- `icons/` - Icon assets (32x32 recommended)
- `sprites/` - Game-related sprites
- `ui-elements/` - UI components and decorations

## üìè Export Guidelines

- **Resolution**: 2x for retina displays
- **Format**: PNG for complex images, SVG for simple icons
- **Naming**: Use kebab-case (e.g., `hero-background.png`)
- **Size**: Optimize for web (use tools like TinyPNG)

## üéØ Integration

After exporting assets here, update the CSS file:
`assets/css/figma/homepage-design.css`
""",
        
        "assets/images/figma/backgrounds/.gitkeep": "# Export Figma backgrounds here",
        "assets/images/figma/buttons/.gitkeep": "# Export Figma buttons here", 
        "assets/images/figma/icons/.gitkeep": "# Export Figma icons here",
        "assets/images/figma/sprites/.gitkeep": "# Export Figma sprites here",
        "assets/images/figma/ui-elements/.gitkeep": "# Export Figma UI elements here"
    }
    
    for file_path, content in placeholders.items():
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        print(f"   ‚úÖ Created placeholder: {file_path}")

def create_integration_helper_script():
    """Create a helper script for common integration tasks"""
    
    helper_content = '''#!/usr/bin/env python3
"""
Figma Integration Helper Script
Common tasks for integrating Figma designs
"""

import os
import shutil
from pathlib import Path

def organize_figma_assets():
    """Organize exported Figma assets into proper folders"""
    
    # Common Figma export patterns
    patterns = {
        'icon': 'assets/images/figma/icons/',
        'button': 'assets/images/figma/buttons/', 
        'bg': 'assets/images/figma/backgrounds/',
        'background': 'assets/images/figma/backgrounds/',
        'sprite': 'assets/images/figma/sprites/',
        'card': 'assets/images/figma/ui-elements/',
        'ui': 'assets/images/figma/ui-elements/'
    }
    
    figma_folder = Path('assets/images/figma')
    
    # Look for files in root figma folder and organize them
    for file_path in figma_folder.glob('*.png'):
        filename = file_path.name.lower()
        
        moved = False
        for pattern, destination in patterns.items():
            if pattern in filename:
                dest_path = Path(destination) / file_path.name
                shutil.move(str(file_path), str(dest_path))
                print(f"Moved {file_path.name} ‚Üí {destination}")
                moved = True
                break
        
        if not moved:
            # Move to ui-elements as default
            dest_path = Path('assets/images/figma/ui-elements') / file_path.name
            shutil.move(str(file_path), str(dest_path))
            print(f"Moved {file_path.name} ‚Üí ui-elements/ (default)")

def validate_assets():
    """Check if all referenced assets exist"""
    
    css_file = Path('assets/css/figma/homepage-design.css')
    if not css_file.exists():
        print("‚ùå Figma CSS file not found")
        return
    
    with open(css_file, 'r') as f:
        content = f.read()
    
    # Find all url() references
    import re
    urls = re.findall(r"url\\(['\\""]?([^'\\"\\)]+)['\\""]?\\)", content)
    
    print("üîç Validating asset references...")
    
    for url in urls:
        asset_path = Path('assets/css/figma') / url[0]
        # Resolve relative path
        asset_path = asset_path.resolve()
        
        if asset_path.exists():
            print(f"   ‚úÖ {url[0]}")
        else:
            print(f"   ‚ùå {url[0]} (missing)")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "organize":
            organize_figma_assets()
        elif command == "validate":
            validate_assets()
        else:
            print("Usage: python figma-helper.py [organize|validate]")
    else:
        print("Figma Integration Helper")
        print("Commands:")
        print("  organize - Organize exported assets into proper folders")
        print("  validate - Check if all CSS asset references exist")
'''
    
    helper_file = "config/figma-helper.py"
    with open(helper_file, 'w', encoding='utf-8') as f:
        f.write(helper_content)
    
    print(f"   ‚úÖ Created helper script: {helper_file}")
    return helper_file

def update_copilot_instructions():
    """Update copilot instructions with Figma integration info"""
    
    instructions_file = ".github/copilot-instructions.md"
    
    figma_section = """

## Figma Integration

The project now supports Figma design integration:

- **Assets Folder**: `assets/images/figma/` for exported images
- **CSS Template**: `assets/css/figma/homepage-design.css` for Figma styles
- **Integration Guide**: `assets/figma-integration-guide.md` for detailed instructions
- **Helper Script**: `config/figma-helper.py` for asset organization

When helping with Figma integration:
- Maintain pixel art aesthetic while incorporating Figma designs
- Use provided CSS template and folder structure
- Ensure responsive design compatibility
- Keep sharp edges and chunky shadows for retro feel"""
    
    try:
        with open(instructions_file, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Add Figma section if not already present
        if "Figma Integration" not in content:
            with open(instructions_file, 'w', encoding='utf-8') as f:
                f.write(content + figma_section)
            print(f"   ‚úÖ Updated: {instructions_file}")
        else:
            print(f"   ‚ÑπÔ∏è  Figma section already exists in: {instructions_file}")
    except FileNotFoundError:
        print(f"   ‚ö†Ô∏è  Could not find: {instructions_file}")

def main():
    """Main setup function"""
    print("üöÄ Earth Saver - Figma Integration Setup")
    print("=" * 50)
    
    # Change to project root if running from config folder
    if Path.cwd().name == 'config':
        os.chdir('..')
    
    # Verify we're in the right place
    if not Path('index.html').exists():
        print("‚ùå Error: Please run this script from the project root directory")
        return
    
    try:
        # Create folder structure
        folders = create_figma_structure()
        
        # Create template files
        css_template = create_figma_css_template()
        guide_file = create_figma_integration_guide()
        
        # Create helper files
        create_asset_placeholders()
        helper_script = create_integration_helper_script()
        
        # Update project files
        update_copilot_instructions()
        
        print("\n" + "=" * 50)
        print("‚úÖ Figma Integration Setup Complete!")
        print("=" * 50)
        
        print("\nüìã Next Steps:")
        print("1. Export your Figma design assets to: assets/images/figma/")
        print("2. Copy Figma CSS to: assets/css/figma/homepage-design.css") 
        print("3. Read the guide: assets/figma-integration-guide.md")
        print("4. Test integration: python config/server.py")
        
        print("\nüõ†Ô∏è Helper Commands:")
        print("‚Ä¢ Organize assets: python config/figma-helper.py organize")
        print("‚Ä¢ Validate assets: python config/figma-helper.py validate")
        
        print("\nüéØ Ready for your Figma design! üé®")
        
    except Exception as e:
        print(f"\n‚ùå Setup failed: {e}")
        print("Please check permissions and try again.")

if __name__ == "__main__":
    main()